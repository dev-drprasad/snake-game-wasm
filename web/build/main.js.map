{"version":3,"sources":["/Users/reddy.prasad/Learning/snake-game-wasm/pkg/snake_game.js","/Users/reddy.prasad/Learning/snake-game-wasm/web/index.js"],"sourcesContent":["let wasm;\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nconst cachedTextEncoder = new TextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n/**\n* @param {string} name\n*/\nexport function greet(name) {\n    const ptr0 = passStringToWasm0(name, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    wasm.greet(ptr0, len0);\n}\n\nasync function load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction getImports() {\n    const imports = {};\n    imports.wbg = {};\n\n    return imports;\n}\n\nfunction initMemory(imports, maybe_memory) {\n\n}\n\nfunction finalizeInit(instance, module) {\n    wasm = instance.exports;\n    init.__wbindgen_wasm_module = module;\n    cachedUint8Memory0 = null;\n\n\n    return wasm;\n}\n\nfunction initSync(module) {\n    const imports = getImports();\n\n    initMemory(imports);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return finalizeInit(instance, module);\n}\n\nasync function init(input) {\n    if (typeof input === 'undefined') {\n        input = new URL('snake_game_bg.wasm', import.meta.url);\n    }\n    const imports = getImports();\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n    initMemory(imports);\n\n    const { instance, module } = await load(await input, imports);\n\n    return finalizeInit(instance, module);\n}\n\nexport { initSync }\nexport default init;\n","import init, { greet } from \"snake_game\";\n\ninit().then(() => {\n  greet(\"Me!\");\n});\n"],"names":[],"mappings":"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"}